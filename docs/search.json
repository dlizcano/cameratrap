[
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html",
    "href": "posts/2024-06-25-species-diversity/index.html",
    "title": "Species diversity",
    "section": "",
    "text": "There are two commonly used ways to account for survey effort when estimating species richness using camera traps:\nIn this post we can see an example of No 1."
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#load-packages",
    "href": "posts/2024-06-25-species-diversity/index.html#load-packages",
    "title": "Species diversity",
    "section": "Load packages",
    "text": "Load packages\n\nCode\n\nlibrary(patchwork) # The Composer of Plots\nlibrary(readxl) # Read Excel Files\nlibrary(sf) # Simple Features for R\nlibrary(elevatr) # Access Elevation Data from Various APIs\nlibrary(mapview) # Interactive Viewing of Spatial Data in R\nlibrary(grateful) # Facilitate Citation of R Packages\nlibrary(camtrapR) # Camera Trap Data Management and Preparation of Occupancy and Spatial Capture-Recapture Analyses\nlibrary(vegan) # Community Ecology Package \nlibrary(iNEXT) # Interpolation and Extrapolation for Species Diversity\nlibrary(knitr) # A General-Purpose Package for Dynamic Report Generation in R\nlibrary(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax\nlibrary(tidyverse) # Easily Install and Load the 'Tidyverse'\nlibrary(ggforce) # Accelerating 'ggplot2'"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#load-data",
    "href": "posts/2024-06-25-species-diversity/index.html#load-data",
    "title": "Species diversity",
    "section": "Load data",
    "text": "Load data\n\nCode\ndatos &lt;- read_excel(\"C:/CodigoR/CameraTrapCesar/data/CT_Cesar.xlsx\")"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#selecting-just-ct_becerril-2021",
    "href": "posts/2024-06-25-species-diversity/index.html#selecting-just-ct_becerril-2021",
    "title": "Species diversity",
    "section": "Selecting Just CT_Becerril 2021",
    "text": "Selecting Just CT_Becerril 2021\nTo this example I selected just one place one year, Becerril 2021. Sometimes we need to make unique codes per camera and cameraOperation table.\n\nCode# make a new column Station\n# datos_PCF &lt;- datos |&gt; dplyr::filter(Proyecto==\"CT_LaPaz_Manaure\") |&gt; unite (\"Station\", ProyectoEtapa:Salida:CT, sep = \"-\")\n\n# fix dates\ndatos$Start &lt;- as.Date(datos$Start, \"%d/%m/%Y\")\ndatos$End &lt;- as.Date(datos$End, \"%d/%m/%Y\")\ndatos$eventDate &lt;- as.Date(datos$eventDate, \"%d/%m/%Y\")\ndatos$eventDateTime &lt;- ymd_hms(paste(datos$eventDate, \" \",\n                              datos$eventTime, \":00\", sep=\"\"))\n\n# filter Becerril\ndatos_Becerril &lt;- datos |&gt; dplyr::filter(ProyectoEtapa==\"CT_Becerril\") |&gt; mutate (Station=IdGeo) |&gt; filter(Year==2021)\n\n# filter MLJ\ndatos_MLJ &lt;- datos |&gt; dplyr::filter(ProyectoEtapa==\"MLJ_TH_TS_2021\") |&gt; mutate (Station=IdGeo)\n\n# filter CL\ndatos_CL1 &lt;- datos |&gt; dplyr::filter(ProyectoEtapa==\"CL-TH2022\") |&gt; mutate (Station=IdGeo)\n# filter CL\ndatos_CL2 &lt;- datos |&gt; dplyr::filter(ProyectoEtapa==\"CL-TS2022\") |&gt; mutate (Station=IdGeo)\n\n# filter PCF\ndatos_PCF &lt;- datos |&gt; dplyr::filter(Proyecto==\"PCF\") |&gt; mutate (Station=IdGeo)\n\ndata_south &lt;- rbind(datos_MLJ,datos_CL1, datos_CL2,datos_PCF)\n\n# filter 2021 and make uniques\nCToperation  &lt;- data_south |&gt; \n              # filter(Year==2021) |&gt; \n              group_by(Station) |&gt; \n              mutate(minStart=min(Start), maxEnd=max(End)) |&gt;  distinct(Longitude, Latitude, minStart, maxEnd, Year) |&gt; \n  ungroup()"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#generating-cameraoperation-and-making-detection-histories-for-all-the-species.",
    "href": "posts/2024-06-25-species-diversity/index.html#generating-cameraoperation-and-making-detection-histories-for-all-the-species.",
    "title": "Species diversity",
    "section": "Generating cameraOperation and making detection histories for all the species.",
    "text": "Generating cameraOperation and making detection histories for all the species.\nThe package CamtrapR has the function ‘cameraOperation’ which makes a table of cameras (stations) and dates (setup, puck-up), this table is key to generate the detection histories using the function ‘detectionHistory’ in the next step.\n\nCode# Generamos la matríz de operación de las cámaras\n\ncamop &lt;- cameraOperation(CTtable= CToperation, # Tabla de operación\n                         stationCol= \"Station\", # Columna que define la estación\n                         setupCol= \"minStart\", #Columna fecha de colocación\n                         retrievalCol= \"maxEnd\", #Columna fecha de retiro\n                         #hasProblems= T, # Hubo fallos de cámaras\n                         dateFormat= \"%Y-%m-%d\") #, # Formato de las fechas\n                         #cameraCol=\"CT\")\n                         # sessionCol= \"Year\")\n\n# Generar las historias de detección ---------------------------------------\n## remove plroblem species\n# ind &lt;- which(datos_PCF$Species==\"Marmosa sp.\")\n# datos_PCF &lt;- datos_PCF[-ind,]\n\nDetHist_list &lt;- lapply(unique(datos_PCF$Species), FUN = function(x) {\n  detectionHistory(\n    recordTable         = datos_PCF, # Tabla de registros\n    camOp                = camop, # Matriz de operación de cámaras\n    stationCol           = \"Station\",\n    speciesCol           = \"Species\",\n    recordDateTimeCol    = \"eventDateTime\",\n    recordDateTimeFormat  = \"%Y-%m-%d\",\n    species              = x,     # la función reemplaza x por cada una de las especies\n    occasionLength       = 7, # Colapso de las historias a 10 ías\n    day1                 = \"station\", # (\"survey\"),or #inicia en la fecha de cada station\n    datesAsOccasionNames = FALSE,\n    includeEffort        = TRUE,\n    scaleEffort          = FALSE,\n    output               = (\"binary\"), # (\"binary\") or (\"count\")\n    #unmarkedMultFrameInput=TRUE\n    timeZone             = \"America/Bogota\" \n    )\n  }\n)\n\n# names\nnames(DetHist_list) &lt;- unique(datos_PCF$Species)\n\n# Finalmente creamos una lista nueva donde estén solo las historias de detección\nylist &lt;- lapply(DetHist_list, FUN = function(x) x$detection_history)"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#use-the-detection-histories-to-make-the-a-matrix-for-vegan",
    "href": "posts/2024-06-25-species-diversity/index.html#use-the-detection-histories-to-make-the-a-matrix-for-vegan",
    "title": "Species diversity",
    "section": "Use the detection histories to make the a matrix for vegan\n",
    "text": "Use the detection histories to make the a matrix for vegan\n\nSpecies accumulation curves made using the package vegan, plot the increase in species richness as we add survey units. If the curve plateaus (flattens), then that suggests you have sampled the majority of the species in your survey area.\n\nCode# loop to make matrix\nmat_vegan &lt;- matrix(NA, dim(ylist[[1]])[1], length(unique(datos_PCF$Species)))\nfor(i in 1:length(unique(datos_PCF$Species))){\n  mat_vegan[,i] &lt;- apply(ylist[[i]], 1, sum, na.rm=TRUE)\n  mat_vegan[,i] &lt;- tidyr::replace_na(mat_vegan[,i], 0) # replace na with 0\n}\n\ncolnames(mat_vegan)  &lt;- unique(datos_PCF$Species)\nrownames(mat_vegan) &lt;- rownames(ylist[[1]])"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#rarefaction-using-vegan",
    "href": "posts/2024-06-25-species-diversity/index.html#rarefaction-using-vegan",
    "title": "Species diversity",
    "section": "Rarefaction using vegan\n",
    "text": "Rarefaction using vegan\n\n\nNotice that sites are cameras and the acumulation is species per camera not time\n\nRarefaction is a technique to assess expected species richness. Rarefaction allows the calculation of species richness for a given number of individual samples, based on the construction of rarefaction curves.\nThe issue that occurs when sampling various species in a community is that the larger the number of individuals sampled, the more species that will be found. Rarefaction curves are created by randomly re-sampling the pool of N samples multiple times and then plotting the average number of species found in each sample (1,2, … N). “Thus rarefaction generates the expected number of species in a small collection of n individuals (or n samples) drawn at random from the large pool of N samples.”. Rarefaction curves generally grow rapidly at first, as the most common species are found, but the curves plateau as only the rarest species remain to be sampled.\n\nCoderarecurve(mat_vegan, col = \"blue\") \n\n\n\n\n\n\nCode\nsp1 &lt;- specaccum(mat_vegan)\nsp2 &lt;- specaccum(mat_vegan, \"random\")\n# sp2\n# summary(sp2)\nplot(sp1, ci.type=\"poly\", col=\"blue\", lwd=2, ci.lty=0, ci.col=\"lightblue\")\nboxplot(sp2, col=\"yellow\", add=TRUE, pch=\"+\")\n\n\n\n\n\n\nCode\n\nmods &lt;- fitspecaccum(sp1, \"gleason\")\nplot(mods, col=\"hotpink\")\nboxplot(sp2, col = \"yellow\", border = \"blue\", lty=1, cex=0.3, add= TRUE)\n\n\n\n\n\n\nCode\n\n## Accumulation model\npool &lt;- poolaccum(mat_vegan)\n# summary(pool, display = \"chao\")\nplot(pool)"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#convert-cameratrap-operation-to-sf-and-get-elevation",
    "href": "posts/2024-06-25-species-diversity/index.html#convert-cameratrap-operation-to-sf-and-get-elevation",
    "title": "Species diversity",
    "section": "Convert Cameratrap-operation to sf and get elevation",
    "text": "Convert Cameratrap-operation to sf and get elevation\n\nCode\n# datos_distinct &lt;- datos |&gt; distinct(Longitude, Latitude, CT, Proyecto)\n\nprojlatlon &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\nCToperation_sf &lt;-  st_as_sf(x = CToperation,\n                         coords = c(\"Longitude\", \n                                    \"Latitude\"),\n                         crs = projlatlon)\n\nCToperation_elev_sf &lt;- get_elev_point(CToperation_sf, src = \"aws\") # get elevation from AWS"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#nonmetric-multidimensional-scaling",
    "href": "posts/2024-06-25-species-diversity/index.html#nonmetric-multidimensional-scaling",
    "title": "Species diversity",
    "section": "Nonmetric Multidimensional Scaling",
    "text": "Nonmetric Multidimensional Scaling\n\nCode\nexample_NMDS=metaMDS(as.data.frame(mat_vegan), \n                     distance=\"mahalanobis\",\n                     zerodist = \"ignore\",\n                     k=5) # T\n#&gt; Wisconsin double standardization\n#&gt; Run 0 stress 6.206335e-17 \n#&gt; Run 1 stress 9.900395e-05 \n#&gt; ... Procrustes: rmse 0.1174021  max resid 0.2814254 \n#&gt; Run 2 stress 0 \n#&gt; ... New best solution\n#&gt; ... Procrustes: rmse 0.1274743  max resid 0.3010555 \n#&gt; Run 3 stress 9.503892e-05 \n#&gt; ... Procrustes: rmse 0.1252807  max resid 0.3076543 \n#&gt; Run 4 stress 9.409423e-05 \n#&gt; ... Procrustes: rmse 0.1256172  max resid 0.3008394 \n#&gt; Run 5 stress 0 \n#&gt; ... Procrustes: rmse 0.1296931  max resid 0.2887971 \n#&gt; Run 6 stress 0 \n#&gt; ... Procrustes: rmse 0.1271139  max resid 0.2942954 \n#&gt; Run 7 stress 4.205314e-05 \n#&gt; ... Procrustes: rmse 0.130922  max resid 0.3101329 \n#&gt; Run 8 stress 9.223465e-05 \n#&gt; ... Procrustes: rmse 0.1199831  max resid 0.2764593 \n#&gt; Run 9 stress 0.001820025 \n#&gt; Run 10 stress 1.956979e-06 \n#&gt; ... Procrustes: rmse 0.125014  max resid 0.2846524 \n#&gt; Run 11 stress 9.969246e-05 \n#&gt; ... Procrustes: rmse 0.120835  max resid 0.3404864 \n#&gt; Run 12 stress 9.011002e-05 \n#&gt; ... Procrustes: rmse 0.1339128  max resid 0.2991148 \n#&gt; Run 13 stress 9.744544e-05 \n#&gt; ... Procrustes: rmse 0.1283807  max resid 0.3068027 \n#&gt; Run 14 stress 0.0002139071 \n#&gt; ... Procrustes: rmse 0.1242437  max resid 0.3187497 \n#&gt; Run 15 stress 7.456558e-05 \n#&gt; ... Procrustes: rmse 0.1271297  max resid 0.3093352 \n#&gt; Run 16 stress 9.598634e-05 \n#&gt; ... Procrustes: rmse 0.124509  max resid 0.298872 \n#&gt; Run 17 stress 4.070221e-05 \n#&gt; ... Procrustes: rmse 0.1200932  max resid 0.2873942 \n#&gt; Run 18 stress 9.940308e-05 \n#&gt; ... Procrustes: rmse 0.1210946  max resid 0.2618398 \n#&gt; Run 19 stress 9.209465e-05 \n#&gt; ... Procrustes: rmse 0.1264992  max resid 0.2993904 \n#&gt; Run 20 stress 9.952299e-05 \n#&gt; ... Procrustes: rmse 0.1220567  max resid 0.300368 \n#&gt; *** Best solution was not repeated -- monoMDS stopping criteria:\n#&gt;      2: no. of iterations &gt;= maxit\n#&gt;     18: stress &lt; smin\n\nordisurf((example_NMDS),CToperation_elev_sf$elevation,main=\"\",col=\"forestgreen\")\n#&gt; \n#&gt; Family: gaussian \n#&gt; Link function: identity \n#&gt; \n#&gt; Formula:\n#&gt; y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n#&gt; \n#&gt; Estimated degrees of freedom:\n#&gt; 8.84  total = 9.84 \n#&gt; \n#&gt; REML score: 301.3758\norditorp(example_NMDS,display=\"species\",col=\"blue\",air=0.1,\n   cex=0.5)"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#rarefaction-using-inext",
    "href": "posts/2024-06-25-species-diversity/index.html#rarefaction-using-inext",
    "title": "Species diversity",
    "section": "Rarefaction using iNEXT\n",
    "text": "Rarefaction using iNEXT\n\n\nCode\n\n# inedat &lt;- lapply(apply(mat_vegan, 2, sum, na.rm=TRUE), as.incfreq)\n# \n# out &lt;- iNEXT(inedat,          # The data frame\n#              q=0,                    # The type of diversity estimator (see discussion of the options below)\n#              datatype=\"incidence_freq\",   # The type of analysis\n#              knots=40,                    # The number of data points in your line (more = smoother)\n#              se=TRUE,                     # Logical statement if you want confidence intervals\n#              conf=0.95,                   # The level of confidence intervals\n#              nboot=50)                    # The number of replications to perform - this generates your confidence interval - the bigger the number the longer the run time\n\ndata(bird)\nout &lt;- iNEXT(bird, datatype=\"abundance\")\nggiNEXT(out)"
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#package-citation",
    "href": "posts/2024-06-25-species-diversity/index.html#package-citation",
    "title": "Species diversity",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", out.dir = \".\") #knitr::kable(pkgs)\npkgs\n\nWe used R version 4.3.2 (R Core Team 2023) and the following R packages: camtrapR v. 2.3.0 (Niedballa et al. 2016), devtools v. 2.4.5 (Wickham et al. 2022), elevatr v. 0.99.0 (Hollister et al. 2023), ggforce v. 0.4.2 (Pedersen 2024a), iNEXT v. 3.0.1 (Chao et al. 2014; Hsieh, Ma, and Chao 2024), kableExtra v. 1.4.0 (Zhu 2024), knitr v. 1.46 (Xie 2014, 2015, 2024), mapview v. 2.11.2 (Appelhans et al. 2023), patchwork v. 1.2.0 (Pedersen 2024b), rmarkdown v. 2.27 (Xie, Allaire, and Grolemund 2018; Xie, Dervieux, and Riederer 2020; Allaire et al. 2024), sf v. 1.0.15 (Pebesma 2018; Pebesma and Bivand 2023), tidyverse v. 2.0.0 (Wickham et al. 2019), vegan v. 2.6.4 (Oksanen et al. 2022)."
  },
  {
    "objectID": "posts/2024-06-25-species-diversity/index.html#sesion-info",
    "href": "posts/2024-06-25-species-diversity/index.html#sesion-info",
    "title": "Species diversity",
    "section": "Sesion info",
    "text": "Sesion info\n\nSession info\n\n#&gt; ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.3.2 (2023-10-31 ucrt)\n#&gt;  os       Windows 10 x64 (build 19042)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  Spanish_Colombia.utf8\n#&gt;  ctype    Spanish_Colombia.utf8\n#&gt;  tz       America/Bogota\n#&gt;  date     2024-06-28\n#&gt;  pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  ! package       * version date (UTC) lib source\n#&gt;    abind           1.4-5   2016-07-21 [1] CRAN (R 4.3.1)\n#&gt;    base64enc       0.1-3   2015-07-28 [1] CRAN (R 4.3.1)\n#&gt;    cachem          1.0.8   2023-05-01 [1] CRAN (R 4.3.2)\n#&gt;    camtrapR      * 2.3.0   2024-02-26 [1] CRAN (R 4.3.3)\n#&gt;    cellranger      1.1.0   2016-07-27 [1] CRAN (R 4.3.2)\n#&gt;    class           7.3-22  2023-05-03 [2] CRAN (R 4.3.2)\n#&gt;    classInt        0.4-10  2023-09-05 [1] CRAN (R 4.3.2)\n#&gt;    cli             3.6.2   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;    cluster         2.1.4   2022-08-22 [2] CRAN (R 4.3.2)\n#&gt;    codetools       0.2-19  2023-02-01 [2] CRAN (R 4.3.2)\n#&gt;    colorspace      2.1-0   2023-01-23 [1] CRAN (R 4.3.2)\n#&gt;    crayon          1.5.2   2022-09-29 [1] CRAN (R 4.3.2)\n#&gt;    crosstalk       1.2.1   2023-11-23 [1] CRAN (R 4.3.2)\n#&gt;    curl            5.2.0   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    data.table      1.15.0  2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;    DBI             1.2.2   2024-02-16 [1] CRAN (R 4.3.2)\n#&gt;    devtools        2.4.5   2022-10-11 [1] CRAN (R 4.3.2)\n#&gt;    digest          0.6.34  2024-01-11 [1] CRAN (R 4.3.2)\n#&gt;    dplyr         * 1.1.4   2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;    e1071           1.7-14  2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    elevatr       * 0.99.0  2023-09-12 [1] CRAN (R 4.3.2)\n#&gt;    ellipsis        0.3.2   2021-04-29 [1] CRAN (R 4.3.2)\n#&gt;    evaluate        0.23    2023-11-01 [1] CRAN (R 4.3.2)\n#&gt;    fansi           1.0.6   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    farver          2.1.1   2022-07-06 [1] CRAN (R 4.3.2)\n#&gt;    fastmap         1.1.1   2023-02-24 [1] CRAN (R 4.3.2)\n#&gt;    forcats       * 1.0.0   2023-01-29 [1] CRAN (R 4.3.2)\n#&gt;    fs              1.6.3   2023-07-20 [1] CRAN (R 4.3.2)\n#&gt;    generics        0.1.3   2022-07-05 [1] CRAN (R 4.3.2)\n#&gt;    ggforce       * 0.4.2   2024-02-19 [1] CRAN (R 4.3.3)\n#&gt;    ggplot2       * 3.5.1   2024-04-23 [1] CRAN (R 4.3.3)\n#&gt;    glue            1.7.0   2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;    grateful      * 0.2.4   2023-10-22 [1] CRAN (R 4.3.3)\n#&gt;    gtable          0.3.4   2023-08-21 [1] CRAN (R 4.3.2)\n#&gt;    hms             1.1.3   2023-03-21 [1] CRAN (R 4.3.2)\n#&gt;    htmltools       0.5.7   2023-11-03 [1] CRAN (R 4.3.2)\n#&gt;    htmlwidgets     1.6.4   2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    httpuv          1.6.14  2024-01-26 [1] CRAN (R 4.3.2)\n#&gt;    httr            1.4.7   2023-08-15 [1] CRAN (R 4.3.2)\n#&gt;    iNEXT         * 3.0.1   2024-03-24 [1] CRAN (R 4.3.3)\n#&gt;    jsonlite        1.8.8   2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;    kableExtra    * 1.4.0   2024-01-24 [1] CRAN (R 4.3.3)\n#&gt;    KernSmooth      2.23-22 2023-07-10 [2] CRAN (R 4.3.2)\n#&gt;    knitr         * 1.46    2024-04-06 [1] CRAN (R 4.3.3)\n#&gt;    labeling        0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n#&gt;    later           1.3.2   2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    lattice       * 0.22-5  2023-10-24 [1] CRAN (R 4.3.2)\n#&gt;    leafem          0.2.3   2023-09-17 [1] CRAN (R 4.3.2)\n#&gt;    leaflet         2.2.1   2023-11-13 [1] CRAN (R 4.3.2)\n#&gt;    lifecycle       1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n#&gt;    lubridate     * 1.9.3   2023-09-27 [1] CRAN (R 4.3.2)\n#&gt;    magrittr        2.0.3   2022-03-30 [1] CRAN (R 4.3.2)\n#&gt;    mapview       * 2.11.2  2023-10-13 [1] CRAN (R 4.3.2)\n#&gt;    MASS            7.3-60  2023-05-04 [2] CRAN (R 4.3.2)\n#&gt;    Matrix          1.6-1.1 2023-09-18 [2] CRAN (R 4.3.2)\n#&gt;    memoise         2.0.1   2021-11-26 [1] CRAN (R 4.3.2)\n#&gt;    mgcv            1.9-1   2023-12-21 [1] CRAN (R 4.3.3)\n#&gt;    mime            0.12    2021-09-28 [1] CRAN (R 4.3.1)\n#&gt;    miniUI          0.1.1.1 2018-05-18 [1] CRAN (R 4.3.2)\n#&gt;    munsell         0.5.0   2018-06-12 [1] CRAN (R 4.3.2)\n#&gt;    nlme            3.1-163 2023-08-09 [2] CRAN (R 4.3.2)\n#&gt;    patchwork     * 1.2.0   2024-01-08 [1] CRAN (R 4.3.3)\n#&gt;    permute       * 0.9-7   2022-01-27 [1] CRAN (R 4.3.3)\n#&gt;    pillar          1.9.0   2023-03-22 [1] CRAN (R 4.3.2)\n#&gt;    pkgbuild        1.4.4   2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;    pkgconfig       2.0.3   2019-09-22 [1] CRAN (R 4.3.2)\n#&gt;    pkgload         1.3.4   2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;    plyr            1.8.9   2023-10-02 [1] CRAN (R 4.3.2)\n#&gt;    png             0.1-8   2022-11-29 [1] CRAN (R 4.3.1)\n#&gt;    polyclip        1.10-6  2023-09-27 [1] CRAN (R 4.3.1)\n#&gt;    prettyunits     1.2.0   2023-09-24 [1] CRAN (R 4.3.2)\n#&gt;    profvis         0.3.8   2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;    progress        1.2.3   2023-12-06 [1] CRAN (R 4.3.3)\n#&gt;    progressr       0.14.0  2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    promises        1.2.1   2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    proxy           0.4-27  2022-06-09 [1] CRAN (R 4.3.2)\n#&gt;    purrr         * 1.0.2   2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    R6              2.5.1   2021-08-19 [1] CRAN (R 4.3.2)\n#&gt;    raster          3.6-26  2023-10-14 [1] CRAN (R 4.3.2)\n#&gt;    Rcpp            1.0.12  2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;    RcppNumerical   0.6-0   2023-09-06 [1] CRAN (R 4.3.3)\n#&gt;  D RcppParallel    5.1.7   2023-02-27 [1] CRAN (R 4.3.2)\n#&gt;    readr         * 2.1.5   2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;    readxl        * 1.4.3   2023-07-06 [1] CRAN (R 4.3.2)\n#&gt;    remotes         2.5.0   2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;    renv            1.0.7   2024-04-11 [1] CRAN (R 4.3.3)\n#&gt;    reshape2        1.4.4   2020-04-09 [1] CRAN (R 4.3.3)\n#&gt;    rlang           1.1.3   2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;    rmarkdown       2.27    2024-05-17 [1] CRAN (R 4.3.3)\n#&gt;    rstudioapi      0.16.0  2024-03-24 [1] CRAN (R 4.3.3)\n#&gt;    satellite       1.0.5   2024-02-10 [1] CRAN (R 4.3.2)\n#&gt;    scales          1.3.0   2023-11-28 [1] CRAN (R 4.3.3)\n#&gt;    secr            4.6.6   2024-02-29 [1] CRAN (R 4.3.3)\n#&gt;    sessioninfo     1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n#&gt;    sf            * 1.0-15  2023-12-18 [1] CRAN (R 4.3.2)\n#&gt;    shiny           1.8.0   2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;    slippymath      0.3.1   2019-06-28 [1] CRAN (R 4.3.2)\n#&gt;    sp              2.1-3   2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;    stringi         1.8.3   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;    stringr       * 1.5.1   2023-11-14 [1] CRAN (R 4.3.2)\n#&gt;    svglite         2.1.3   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    systemfonts     1.0.5   2023-10-09 [1] CRAN (R 4.3.2)\n#&gt;    terra           1.7-71  2024-01-31 [1] CRAN (R 4.3.2)\n#&gt;    tibble        * 3.2.1   2023-03-20 [1] CRAN (R 4.3.2)\n#&gt;    tidyr         * 1.3.1   2024-01-24 [1] CRAN (R 4.3.2)\n#&gt;    tidyselect      1.2.1   2024-03-11 [1] CRAN (R 4.3.3)\n#&gt;    tidyverse     * 2.0.0   2023-02-22 [1] CRAN (R 4.3.2)\n#&gt;    timechange      0.3.0   2024-01-18 [1] CRAN (R 4.3.2)\n#&gt;    tweenr          2.0.3   2024-02-26 [1] CRAN (R 4.3.3)\n#&gt;    tzdb            0.4.0   2023-05-12 [1] CRAN (R 4.3.2)\n#&gt;    units           0.8-5   2023-11-28 [1] CRAN (R 4.3.2)\n#&gt;    urlchecker      1.0.1   2021-11-30 [1] CRAN (R 4.3.2)\n#&gt;    usethis         2.2.3   2024-02-19 [1] CRAN (R 4.3.2)\n#&gt;    utf8            1.2.4   2023-10-22 [1] CRAN (R 4.3.2)\n#&gt;    vctrs           0.6.5   2023-12-01 [1] CRAN (R 4.3.2)\n#&gt;    vegan         * 2.6-4   2022-10-11 [1] CRAN (R 4.3.3)\n#&gt;    viridisLite     0.4.2   2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;    withr           3.0.0   2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;    xfun            0.44    2024-05-15 [1] CRAN (R 4.3.3)\n#&gt;    xml2            1.3.6   2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;    xtable          1.8-4   2019-04-21 [1] CRAN (R 4.3.2)\n#&gt;    yaml            2.3.8   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt; \n#&gt;  [1] C:/Users/usuario/AppData/Local/R/win-library/4.3\n#&gt;  [2] C:/Program Files/R/R-4.3.2/library\n#&gt; \n#&gt;  D ── DLL MD5 mismatch, broken installation.\n#&gt; \n#&gt; ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html",
    "href": "posts/2024-06-15-visualizing-the-data/index.html",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "",
    "text": "As a simple map and calendar"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#load-packages",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#load-packages",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Load packages",
    "text": "Load packages\n\nCode\n# library(ggpmthemes)\nlibrary(glue) # Interpreted String Literals\nlibrary(curl) # A Modern and Flexible Web Client for R\nlibrary(patchwork) # The Composer of Plots\nlibrary(readxl) # Read Excel Files\nlibrary(sf) # Simple Features for R\nlibrary(mapview) # Interactive Viewing of Spatial Data in R\nlibrary(ggTimeSeries) # calendar\nlibrary(grateful) # Facilitate Citation of R Packages\n\nlibrary(knitr) # A General-Purpose Package for Dynamic Report Generation in R\n# options(kableExtra.auto_format = FALSE)\nlibrary(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax\nlibrary(tidyverse) # Easily Install and Load the 'Tidyverse'\nlibrary(ggforce) # Accelerating 'ggplot2'\n\nsource(\"C:/CodigoR/CameraTrapCesar/R/organiza_datos.R\")"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#load-data",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#load-data",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Load data",
    "text": "Load data\n\nCode\ndatos &lt;- read_excel(\"C:/CodigoR/CameraTrapCesar/data/CT_Cesar.xlsx\")"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#convert-to-sf",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#convert-to-sf",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Convert to sf",
    "text": "Convert to sf\n\nCode\ndatos_distinct &lt;- datos |&gt; distinct(Longitude, Latitude, CT, Proyecto)\n\nprojlatlon &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\ndatos_sf &lt;-  st_as_sf(x = datos_distinct,\n                         coords = c(\"Longitude\", \n                                    \"Latitude\"),\n                         crs = projlatlon)"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#plot-all",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#plot-all",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Plot all",
    "text": "Plot all\n\nCodemapview(datos_sf, zcol=\"Proyecto\")\n\n\n\n\nCode\n\ncalendario &lt;- function(data=datos, Proyect=Proyecto){\n  dtData&lt;- datos |&gt; filter(Proyecto==Proyect) |&gt; #|&gt; filter(Year==\"2022\")\n  # becerril$Date_Time &lt;- as_date(as.character(data$eventDate))\n      mutate(Date_Time=as.Date(eventDate, \"%d/%m/%Y\")) |&gt; \n      count(Date_Time) |&gt; na.omit()\n  \n  # base plot\n  p1 = ggplot_calendar_heatmap(\n     dtData,\n     'Date_Time',\n     'n',\n     dayBorderSize = 0.1,\n     monthBorderSize = 0.7\n  )\n  \n  # adding some formatting\n  p1 +\n     xlab(NULL) +\n     ylab(NULL) +\n     scale_fill_continuous(low = 'cyan', high = 'red') +\n     facet_wrap(~Year, ncol = 1) # number of columns\n} # end function"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#see-camera-calendar-per-proyecto",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#see-camera-calendar-per-proyecto",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "See camera calendar per Proyecto",
    "text": "See camera calendar per Proyecto\nBecerril\n\nCode\ncalendario(data=datos, Proyect = \"Becerril\")\n\n\n\n\n\n\nCode\n# species &lt;- f.det_history.creator(data=becerril_2022)\n# \n# \n# min(dmy(becerril_2022$Start))\n# max(dmy(becerril_2022$Start))\n# \n# min(dmy(becerril_2022$eventDate))\n\n\nLas camaras en Becerril estuvieron activas año y medio.\nLaPaz_Manaure\n\nCode\ncalendario(data=datos, Proyect = \"LaPaz_Manaure\")\n\n\n\n\n\n\n\nPCF\n\nCodecalendario(data=datos, Proyect = \"PCF\")\n\n\n\n\n\n\n\nCL\n\nCodecalendario(data=datos, Proyect = \"CL\")\n\n\n\n\n\n\n\nEDN\n\nCodecalendario(data=datos, Proyect = \"EDN\")\n\n\n\n\n\n\n\nPB\n\nCodecalendario(data=datos, Proyect = \"PB\" )\n\n\n\n\n\n\n\nEDS\n\nCodecalendario(data=datos, Proyect = \"EDS\" )\n\n\n\n\n\n\n\nCCI\n\nCodecalendario(data=datos, Proyect = \"CCI\" )\n\n\n\n\n\n\n\nMLJ\n\nCodecalendario(data=datos, Proyect = \"MLJ\" )\n\n\n\n\n\n\n\nMCAL\n\nCodecalendario(data=datos, Proyect = \"MCAL\" )"
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#package-citation",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#package-citation",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", out.dir = \".\") #knitr::kable(pkgs)\npkgs\n\nWe used R version 4.3.2 (R Core Team 2023) and the following R packages: curl v. 5.2.0 (Ooms 2023), devtools v. 2.4.5 (Wickham et al. 2022), ggforce v. 0.4.2 (Pedersen 2024a), ggTimeSeries v. 1.0.2 (Kothari 2022), glue v. 1.7.0 (Hester and Bryan 2024), kableExtra v. 1.4.0 (Zhu 2024), knitr v. 1.46 (Xie 2014, 2015, 2024), mapview v. 2.11.2 (Appelhans et al. 2023), patchwork v. 1.2.0 (Pedersen 2024b), quarto v. 1.4 (Allaire and Dervieux 2024), rmarkdown v. 2.27 (Xie, Allaire, and Grolemund 2018; Xie, Dervieux, and Riederer 2020; Allaire et al. 2024), sf v. 1.0.15 (Pebesma 2018; Pebesma and Bivand 2023), styler v. 1.10.3 (Müller and Walthert 2024), tidyverse v. 2.0.0 (Wickham et al. 2019)."
  },
  {
    "objectID": "posts/2024-06-15-visualizing-the-data/index.html#sesion-info",
    "href": "posts/2024-06-15-visualizing-the-data/index.html#sesion-info",
    "title": "Visualizing Cesar Cameratrap Data",
    "section": "Sesion info",
    "text": "Sesion info\n\nSession info\n\n#&gt; ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.3.2 (2023-10-31 ucrt)\n#&gt;  os       Windows 10 x64 (build 19042)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  Spanish_Colombia.utf8\n#&gt;  ctype    Spanish_Colombia.utf8\n#&gt;  tz       America/Bogota\n#&gt;  date     2024-06-23\n#&gt;  pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  package           * version date (UTC) lib source\n#&gt;  base64enc           0.1-3   2015-07-28 [1] CRAN (R 4.3.1)\n#&gt;  brew                1.0-10  2023-12-16 [1] CRAN (R 4.3.2)\n#&gt;  cachem              1.0.8   2023-05-01 [1] CRAN (R 4.3.2)\n#&gt;  cellranger          1.1.0   2016-07-27 [1] CRAN (R 4.3.2)\n#&gt;  class               7.3-22  2023-05-03 [2] CRAN (R 4.3.2)\n#&gt;  classInt            0.4-10  2023-09-05 [1] CRAN (R 4.3.2)\n#&gt;  cli                 3.6.2   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;  codetools           0.2-19  2023-02-01 [2] CRAN (R 4.3.2)\n#&gt;  colorspace          2.1-0   2023-01-23 [1] CRAN (R 4.3.2)\n#&gt;  crosstalk           1.2.1   2023-11-23 [1] CRAN (R 4.3.2)\n#&gt;  curl              * 5.2.0   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;  data.table          1.15.0  2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;  DBI                 1.2.2   2024-02-16 [1] CRAN (R 4.3.2)\n#&gt;  devtools            2.4.5   2022-10-11 [1] CRAN (R 4.3.2)\n#&gt;  digest              0.6.34  2024-01-11 [1] CRAN (R 4.3.2)\n#&gt;  dplyr             * 1.1.4   2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;  e1071               1.7-14  2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  ellipsis            0.3.2   2021-04-29 [1] CRAN (R 4.3.2)\n#&gt;  evaluate            0.23    2023-11-01 [1] CRAN (R 4.3.2)\n#&gt;  fansi               1.0.6   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;  farver              2.1.1   2022-07-06 [1] CRAN (R 4.3.2)\n#&gt;  fastmap             1.1.1   2023-02-24 [1] CRAN (R 4.3.2)\n#&gt;  forcats           * 1.0.0   2023-01-29 [1] CRAN (R 4.3.2)\n#&gt;  fs                  1.6.3   2023-07-20 [1] CRAN (R 4.3.2)\n#&gt;  generics            0.1.3   2022-07-05 [1] CRAN (R 4.3.2)\n#&gt;  ggforce           * 0.4.2   2024-02-19 [1] CRAN (R 4.3.3)\n#&gt;  ggplot2           * 3.5.1   2024-04-23 [1] CRAN (R 4.3.3)\n#&gt;  ggTimeSeries      * 1.0.2   2022-01-23 [1] CRAN (R 4.3.3)\n#&gt;  glue              * 1.7.0   2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;  grateful          * 0.2.4   2023-10-22 [1] CRAN (R 4.3.3)\n#&gt;  gtable              0.3.4   2023-08-21 [1] CRAN (R 4.3.2)\n#&gt;  hms                 1.1.3   2023-03-21 [1] CRAN (R 4.3.2)\n#&gt;  htmltools           0.5.7   2023-11-03 [1] CRAN (R 4.3.2)\n#&gt;  htmlwidgets         1.6.4   2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  httpuv              1.6.14  2024-01-26 [1] CRAN (R 4.3.2)\n#&gt;  jquerylib           0.1.4   2021-04-26 [1] CRAN (R 4.3.2)\n#&gt;  jsonlite            1.8.8   2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;  kableExtra        * 1.4.0   2024-01-24 [1] CRAN (R 4.3.3)\n#&gt;  KernSmooth          2.23-22 2023-07-10 [2] CRAN (R 4.3.2)\n#&gt;  knitr             * 1.46    2024-04-06 [1] CRAN (R 4.3.3)\n#&gt;  labeling            0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n#&gt;  later               1.3.2   2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;  lattice             0.22-5  2023-10-24 [1] CRAN (R 4.3.2)\n#&gt;  leafem              0.2.3   2023-09-17 [1] CRAN (R 4.3.2)\n#&gt;  leaflet             2.2.1   2023-11-13 [1] CRAN (R 4.3.2)\n#&gt;  leaflet.providers   2.0.0   2023-10-17 [1] CRAN (R 4.3.2)\n#&gt;  leafpop             0.1.0   2021-05-22 [1] CRAN (R 4.3.2)\n#&gt;  lifecycle           1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n#&gt;  lubridate         * 1.9.3   2023-09-27 [1] CRAN (R 4.3.2)\n#&gt;  magrittr            2.0.3   2022-03-30 [1] CRAN (R 4.3.2)\n#&gt;  mapview           * 2.11.2  2023-10-13 [1] CRAN (R 4.3.2)\n#&gt;  MASS                7.3-60  2023-05-04 [2] CRAN (R 4.3.2)\n#&gt;  memoise             2.0.1   2021-11-26 [1] CRAN (R 4.3.2)\n#&gt;  mime                0.12    2021-09-28 [1] CRAN (R 4.3.1)\n#&gt;  miniUI              0.1.1.1 2018-05-18 [1] CRAN (R 4.3.2)\n#&gt;  munsell             0.5.0   2018-06-12 [1] CRAN (R 4.3.2)\n#&gt;  patchwork         * 1.2.0   2024-01-08 [1] CRAN (R 4.3.3)\n#&gt;  pillar              1.9.0   2023-03-22 [1] CRAN (R 4.3.2)\n#&gt;  pkgbuild            1.4.4   2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;  pkgconfig           2.0.3   2019-09-22 [1] CRAN (R 4.3.2)\n#&gt;  pkgload             1.3.4   2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;  png                 0.1-8   2022-11-29 [1] CRAN (R 4.3.1)\n#&gt;  polyclip            1.10-6  2023-09-27 [1] CRAN (R 4.3.1)\n#&gt;  processx            3.8.3   2023-12-10 [1] CRAN (R 4.3.2)\n#&gt;  profvis             0.3.8   2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;  promises            1.2.1   2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;  proxy               0.4-27  2022-06-09 [1] CRAN (R 4.3.2)\n#&gt;  ps                  1.7.6   2024-01-18 [1] CRAN (R 4.3.2)\n#&gt;  purrr             * 1.0.2   2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;  quarto            * 1.4     2024-03-06 [1] CRAN (R 4.3.3)\n#&gt;  R.cache             0.16.0  2022-07-21 [1] CRAN (R 4.3.3)\n#&gt;  R.methodsS3         1.8.2   2022-06-13 [1] CRAN (R 4.3.3)\n#&gt;  R.oo                1.26.0  2024-01-24 [1] CRAN (R 4.3.3)\n#&gt;  R.utils             2.12.3  2023-11-18 [1] CRAN (R 4.3.3)\n#&gt;  R6                  2.5.1   2021-08-19 [1] CRAN (R 4.3.2)\n#&gt;  raster              3.6-26  2023-10-14 [1] CRAN (R 4.3.2)\n#&gt;  Rcpp                1.0.12  2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;  readr             * 2.1.5   2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;  readxl            * 1.4.3   2023-07-06 [1] CRAN (R 4.3.2)\n#&gt;  remotes             2.5.0   2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;  renv                1.0.3   2023-09-19 [1] CRAN (R 4.3.2)\n#&gt;  rlang               1.1.3   2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;  rmarkdown           2.27    2024-05-17 [1] CRAN (R 4.3.3)\n#&gt;  rstudioapi          0.16.0  2024-03-24 [1] CRAN (R 4.3.3)\n#&gt;  satellite           1.0.5   2024-02-10 [1] CRAN (R 4.3.2)\n#&gt;  scales              1.3.0   2023-11-28 [1] CRAN (R 4.3.3)\n#&gt;  sessioninfo         1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n#&gt;  sf                * 1.0-15  2023-12-18 [1] CRAN (R 4.3.2)\n#&gt;  shiny               1.8.0   2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;  sp                  2.1-3   2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;  stringi             1.8.3   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;  stringr           * 1.5.1   2023-11-14 [1] CRAN (R 4.3.2)\n#&gt;  styler            * 1.10.3  2024-04-07 [1] CRAN (R 4.3.3)\n#&gt;  svglite             2.1.3   2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;  systemfonts         1.0.5   2023-10-09 [1] CRAN (R 4.3.2)\n#&gt;  terra               1.7-71  2024-01-31 [1] CRAN (R 4.3.2)\n#&gt;  tibble            * 3.2.1   2023-03-20 [1] CRAN (R 4.3.2)\n#&gt;  tidyr             * 1.3.1   2024-01-24 [1] CRAN (R 4.3.2)\n#&gt;  tidyselect          1.2.1   2024-03-11 [1] CRAN (R 4.3.3)\n#&gt;  tidyverse         * 2.0.0   2023-02-22 [1] CRAN (R 4.3.2)\n#&gt;  timechange          0.3.0   2024-01-18 [1] CRAN (R 4.3.2)\n#&gt;  tweenr              2.0.3   2024-02-26 [1] CRAN (R 4.3.3)\n#&gt;  tzdb                0.4.0   2023-05-12 [1] CRAN (R 4.3.2)\n#&gt;  units               0.8-5   2023-11-28 [1] CRAN (R 4.3.2)\n#&gt;  urlchecker          1.0.1   2021-11-30 [1] CRAN (R 4.3.2)\n#&gt;  usethis             2.2.3   2024-02-19 [1] CRAN (R 4.3.2)\n#&gt;  utf8                1.2.4   2023-10-22 [1] CRAN (R 4.3.2)\n#&gt;  uuid                1.2-0   2024-01-14 [1] CRAN (R 4.3.2)\n#&gt;  vctrs               0.6.5   2023-12-01 [1] CRAN (R 4.3.2)\n#&gt;  viridisLite         0.4.2   2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;  withr               3.0.0   2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;  xfun                0.44    2024-05-15 [1] CRAN (R 4.3.3)\n#&gt;  xml2                1.3.6   2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;  xtable              1.8-4   2019-04-21 [1] CRAN (R 4.3.2)\n#&gt;  yaml                2.3.8   2023-12-11 [1] CRAN (R 4.3.2)\n#&gt; \n#&gt;  [1] C:/Users/usuario/AppData/Local/R/win-library/4.3\n#&gt;  [2] C:/Program Files/R/R-4.3.2/library\n#&gt; \n#&gt; ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "diversity.html",
    "href": "diversity.html",
    "title": "Diversity",
    "section": "",
    "text": "Mammalian diversity"
  },
  {
    "objectID": "diversity.html#diversity",
    "href": "diversity.html#diversity",
    "title": "Diversity",
    "section": "",
    "text": "Mammalian diversity"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, my name is Diego Lizcano. As a wildlife ecologist, the R statistical computing language is an important part of my daily workflow. I mainly use R for data analysis, modelling, and data manipulation."
  },
  {
    "objectID": "about.html#current-research",
    "href": "about.html#current-research",
    "title": "About",
    "section": "Current research",
    "text": "Current research\nI am currently working as a data annalist for WCS Andes-Amazon-Orinoco Region\nSome researches I am currently working on:\n\nJaguar detection and occupancy analysis\nWCS Strongholds\n\nI am always looking for new collaborations. Do not hesitate to contact me!"
  },
  {
    "objectID": "about.html#scientific-interests-no-specific-order",
    "href": "about.html#scientific-interests-no-specific-order",
    "title": "About",
    "section": "Scientific interests (no specific order)",
    "text": "Scientific interests (no specific order)\n\nMammal ecology\nCameratrap data analysis\nAcoustics\nEcological modeling"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Camera Trap Blog",
    "section": "",
    "text": "Species diversity\n\n\n\nR\n\n\ndiversity\n\n\naccumulation\n\n\neffort\n\n\n\nusing packages vegan and iNext\n\n\n\nDiego J. Lizcano\n\n\nJun 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMultispecies occupancy model\n\n\n\nR\n\n\noccupancy\n\n\nJAGS\n\n\ncamtrapR\n\n\n\nMultispecies occupancy models combines information from multiple species to estimate both individual and community-level responses to environmental variables\n\n\n\nDiego J. Lizcano\n\n\nJun 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing Cesar Cameratrap Data\n\n\n\nR\n\n\ncalendar\n\n\nmap\n\n\n\na lot of camera trap data from Galictis Biodiversidad\n\n\n\nDiego J. Lizcano\n\n\nJun 15, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html",
    "title": "Multispecies occupancy model",
    "section": "",
    "text": "CamtrapR is making very easy to make Multispecies occupancy models from camera trap data. Here one example."
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#using-camtrapr",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#using-camtrapr",
    "title": "Multispecies occupancy model",
    "section": "",
    "text": "CamtrapR is making very easy to make Multispecies occupancy models from camera trap data. Here one example."
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#load-packages",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#load-packages",
    "title": "Multispecies occupancy model",
    "section": "Load packages",
    "text": "Load packages\nFirst we load some packages\n\nCode\nlibrary(grateful) # Facilitate Citation of R Packages\nlibrary(patchwork) # The Composer of Plots\nlibrary(readxl) # Read Excel Files\nlibrary(sf) # Simple Features for R\nlibrary(mapview) # Interactive Viewing of Spatial Data in R\nlibrary(terra) # Spatial Data Analysis\nlibrary(elevatr) # Access Elevation Data from Various APIs\n\nlibrary(camtrapR) # Camera Trap Data Management and Preparation of Occupancy and Spatial Capture-Recapture Analyses \nlibrary(rjags) # Bayesian Graphical Models using MCMC \nlibrary(nimble) # MCMC, Particle Filtering, and Programmable Hierarchical Modeling \n\nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models \nlibrary(SpadeR) # Species-Richness Prediction and Diversity Estimation with R \nlibrary(tictoc) # Functions for Timing R Scripts, as Well as Implementations of \"Stack\" and \"StackList\" Structures \nlibrary(beepr) # Easily Play Notification Sounds on any Platform \nlibrary(snowfall) # Easier Cluster Computing (Based on 'snow')\nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models \n\nlibrary(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax\nlibrary(tidyverse) # Easily Install and Load the 'Tidyverse'"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#load-data",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#load-data",
    "title": "Multispecies occupancy model",
    "section": "Load data",
    "text": "Load data\nThe data set is i a excel file so we use read_excel function to load it.\n\nCode\ndatos &lt;- read_excel(\"C:/CodigoR/CameraTrapCesar/data/CT_Cesar.xlsx\")"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#selecting-just-ct_becerril-2021",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#selecting-just-ct_becerril-2021",
    "title": "Multispecies occupancy model",
    "section": "Selecting Just CT_Becerril 2021",
    "text": "Selecting Just CT_Becerril 2021\nTo this example I selected just one place one year, Becerril 2021. Sometimes we need to make unique codes per camera and cameraOperation table.\n\nCode# make a new column Station\n# datos_PCF &lt;- datos |&gt; dplyr::filter(Proyecto==\"CT_LaPaz_Manaure\") |&gt; unite (\"Station\", ProyectoEtapa:Salida:CT, sep = \"-\")\n\n# fix dates\ndatos$Start &lt;- as.Date(datos$Start, \"%d/%m/%Y\")\ndatos$End &lt;- as.Date(datos$End, \"%d/%m/%Y\")\ndatos$eventDate &lt;- as.Date(datos$eventDate, \"%d/%m/%Y\")\ndatos$eventDateTime &lt;- ymd_hms(paste(datos$eventDate, \" \",\n                              datos$eventTime, \":00\", sep=\"\"))\n\n# filter Becerril\ndatos_PCF &lt;- datos |&gt; dplyr::filter(ProyectoEtapa==\"CT_Becerril\") |&gt; mutate (Station=IdGeo)\n\n# filter 2021 and make uniques\nCToperation  &lt;- datos_PCF |&gt; filter(Year==2021) |&gt; group_by(Station) |&gt; \n                           mutate(minStart=min(Start), maxEnd=max(End)) |&gt; distinct(Longitude, Latitude, minStart, maxEnd, Year) |&gt; ungroup()"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#generating-cameraoperation-and-making-detection-histories-for-all-the-species.",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#generating-cameraoperation-and-making-detection-histories-for-all-the-species.",
    "title": "Multispecies occupancy model",
    "section": "Generating cameraOperation and making detection histories for all the species.",
    "text": "Generating cameraOperation and making detection histories for all the species.\nThe package CamtrapR has the function ‘cameraOperation’ which makes a table of cameras (stations) and dates (setup, puck-up), this table is key to generate the detection histories using the function ‘detectionHistory’ in the next step.\n\nCode# Generamos la matríz de operación de las cámaras\n\ncamop &lt;- cameraOperation(CTtable= CToperation, # Tabla de operación\n                         stationCol= \"Station\", # Columna que define la estación\n                         setupCol= \"minStart\", #Columna fecha de colocación\n                         retrievalCol= \"maxEnd\", #Columna fecha de retiro\n                         #hasProblems= T, # Hubo fallos de cámaras\n                         dateFormat= \"%Y-%m-%d\") #, # Formato de las fechas\n                         #cameraCol=\"CT\")\n                         # sessionCol= \"Year\")\n\n# Generar las historias de detección ---------------------------------------\n## remove plroblem species\nind &lt;- which(datos_PCF$Species==\"Marmosa sp.\")\ndatos_PCF &lt;- datos_PCF[-ind,]\n\nDetHist_list &lt;- lapply(unique(datos_PCF$Species), FUN = function(x) {\n  detectionHistory(\n    recordTable         = datos_PCF, # Tabla de registros\n    camOp                = camop, # Matriz de operación de cámaras\n    stationCol           = \"Station\",\n    speciesCol           = \"Species\",\n    recordDateTimeCol    = \"eventDateTime\",\n    recordDateTimeFormat  = \"%Y-%m-%d\",\n    species              = x,     # la función reemplaza x por cada una de las especies\n    occasionLength       = 10, # Colapso de las historias a 10 ías\n    day1                 = \"station\", #inicie en la fecha de cada survey\n    datesAsOccasionNames = FALSE,\n    includeEffort        = TRUE,\n    scaleEffort          = TRUE,\n    #unmarkedMultFrameInput=TRUE\n    timeZone             = \"America/Bogota\" \n    )\n  }\n)\n\n# names\nnames(DetHist_list) &lt;- unique(datos_PCF$Species)\n\n# Finalmente creamos una lista nueva donde estén solo las historias de detección\nylist &lt;- lapply(DetHist_list, FUN = function(x) x$detection_history)"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#preparing-spatial-covariates",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#preparing-spatial-covariates",
    "title": "Multispecies occupancy model",
    "section": "Preparing spatial covariates",
    "text": "Preparing spatial covariates\nmake sf object, get elevation and derive terrain (slope and roughness).\nWe use the lat and long to make a sf object with the camera locations.\n\nCode\n# make sf object\nprojlatlon &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\ndatos_PCF_sf &lt;-  st_as_sf(x = CToperation,\n                         coords = c(\"Longitude\", \n                                    \"Latitude\"),\n                         crs = projlatlon)\n\n# covariates\nelev &lt;- rast(get_elev_raster(datos_PCF_sf, z=14)) # get raster map\nslope &lt;- terrain(elev, v=\"slope\", neighbors=8, unit=\"degrees\")  \n# also slope, aspect, TPI, TRI, TRIriley, TRIrmsd, roughness, flowdir \nrough &lt;- terrain(elev, v=\"roughness\", neighbors=8, unit=\"degrees\")  \n# landcover &lt;- rast(\"C:/CodigoR/WCS-CameraTrap/raster/latlon/LandCover_Type_Yearly_500m_v61/LC1/MCD12Q1_LC1_2021_001.tif\") \n\ncos_rast &lt;- c(elev,slope, rough) # make a stack\n# rename stack\nnames(cos_rast) &lt;- c(\"elev\", \"slope\", \"rough\")\n\nplot(cos_rast)\n\n\n\n\n\n\nCode\nmapview(elev) + mapview(datos_PCF_sf)\n\n\n\n\n\nExtract values from the rasters\nWe use the camera locations to extract the raster (elevations, slope and roughness) information.\n\nCode\n\n# extract\ncovs &lt;- terra::extract(cos_rast, datos_PCF_sf)\n# landcov &lt;- terra::extract(landcover, datos_PCF_sf)"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#multispecies-occupancy-model",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#multispecies-occupancy-model",
    "title": "Multispecies occupancy model",
    "section": "Multispecies occupancy model",
    "text": "Multispecies occupancy model\nPreparing the model\nNow we have all ready to make our model. We put the data of the species, and the covariates in a list.\n\nCode\n# check consistancy equal mumner of spatial covariates and rows in data\n# identical(nrow(ylist[[1]]), nrow(covars)) \n\n# Base de datos para los análisis -----------------------------------------\n\ndata_list &lt;- list(ylist    = ylist, # Historias de detección\n                  siteCovs = covs[,2:4], #covars, # Covariables de sitio\n                  obsCovs  = list(effort = DetHist_list[[1]]$effort))  # agregamos el esfuerzo de muestreo como covariable de observación\n\n# 3. 1 Modelo multi-especie  -----------------------------------------\n\n# Se creará un txt temporal donde estarán las especificaciones del modelo en enfoque Bayesiano\nmodelfile &lt;- (fileext = \"modoccu.txt\")\n\n# Usaremos la función ` communityModel`\n\n\nGenerating the model\nWe use the function ‘communityModel’ to setup our model, selecting which covariates is for detection or occupancy and if it is fixed or random effect.\n\nCode\n\n# Generemos el modelo\ncomu_model &lt;- communityModel(data_list, # la lista de datos\n                             occuCovs = list(ranef=c(\"rough\", \"elev\")), # ranef La covariables de sitio\n                             detCovsObservation = list(fixed = \"effort\"), #Covariables de observación\n                             intercepts = list(det = \"ranef\", occu = \"ranef\"),\n                             augmentation = c(full = 30),# Número aumentado de especies\n                             modelFile = \"modelfile\")\n\nsummary(comu_model)\n#&gt; commOccu object for community occupancy model (in JAGS)\n#&gt; \n#&gt; 30 species,  23 stations,  39 occasions\n#&gt; 530 occasions with effort\n#&gt; Number of detections (by species): 0 - 165 \n#&gt; \n#&gt; Available site covariates:\n#&gt;  elev, slope, rough \n#&gt; \n#&gt; Used site covariates:\n#&gt;  elev, rough \n#&gt; \n#&gt; Available site-occasion covariates:\n#&gt;  effort\n\n\nRunning the model\n\nGo for a coffe and enjoy while you wait for the signal beep.\n\n\nCode# Running the model\n\nfit.commu &lt;- fit(comu_model,\n                 n.iter = 1200,\n                 n.burnin = 200,\n                 thin = 2,\n                 chains = 3,\n                 cores = 3,\n                 quiet = T\n);beep(sound = 4)\n\n# save the results to not run again\nsave(fit.commu, file=\"C:/CodigoR/CameraTrapCesar/posts/2024-06-20-multispecies-occupancy/result/DR_result.R\") # guardamos los resultados para no correr de nuevo\n\n\nSee the results\nAs a table\n\nCode\n# Resultados --------------------------------------------------------------\n\n# Extraemos lo tabla de valores estimados\nmodresult &lt;- as.data.frame(summary(fit.commu)[[\"statistics\"]])\n# View(modresult)\nDT::datatable(round(summary(fit.commu)$statistics, 3))\n\n\n\n\n\nAs graphs\n\nCode# Gráficos de predicción y de coeficientes\n\n# Otra gran ventaja de CamtrapR es que permite gráficar de manera muy sencilla la predicción posterior del modelo. Veamos que pasa con la ocupación de cada especie\n\nplot_effects(comu_model,\n              fit.commu,\n              submodel = \"det\")\n#&gt; $effort\n\n\n\n\n\n\nCode\nplot_coef(comu_model,\n           fit.commu,\n           submodel = \"state\",\n           combine = T)\n\n\n\n\n\n\nCode\nplot_effects(comu_model, # El modelo\n             fit.commu, # El objeto ajustado\n             submodel = \"state\",\n             response = \"occupancy\") # el parámetro de interés\n#&gt; $rough\n\n\n\n\n\n\n#&gt; \n#&gt; $elev\n\n\n\n\n\n\nCode\n# Ahora con los coeficientes estimados\n\n# plot_coef(comu_model,\n#           fit.commu,\n#           submodel = \"state\")\n\n\nSee the species richness\nNotice the estimated species richness is: 29.0866667, 1.1764686, 0.0303763, 0.0529884\n\nCode\n# Valor de Ntotal, es decir del número de especies estimado\n(riqueza_est &lt;- modresult[\"Ntotal\",])\n#&gt;            Mean       SD   Naive SE Time-series SE\n#&gt; Ntotal 29.08667 1.176469 0.03037629     0.05298842\n\n# Veamos el gráfico de la distribución posterior\nmcmc_areas(fit.commu, # objeto jags\n           pars= \"Ntotal\", # parámetro de interés\n           point_est = \"mean\",\n           prob = 0.95) # intervalos de credibilidad\n\n\n\n\n\n\nCode\n\n# La estimación no se ve muy bien, hay que verificar los trace plots\n\nmcmc_trace(fit.commu, pars = \"Ntotal\")\n\n\n\n\n\n\nCode\n# Debería verse como un cesped, muy probablemente necesitamos muchas mas iteraciones para este modelo\n\ngd &lt;- as.data.frame(gelman.diag(fit.commu,  multivariate = FALSE)[[1]])\ngd[\"Ntotal\",]\n#&gt;        Point est. Upper C.I.\n#&gt; Ntotal   1.026772   1.073807\n\n#La prueba de Gelman-Rubin debe ser ~1 para considerar que hay buena convergencia. Aunque tenemos un valor bueno para Ntotal, hay varios valores de omega con NA, eso puede estar causando los problemas.\n\n\nComparing species richness with Chao\n\nCode\n# Comparando con métodos clásicos -----------------------------------------\n\n\n# Formatear los datos a un vector de frecuencia\ninci_Chao &lt;- ylist %&gt;%  # historias de captura\n  map(~rowSums(.,na.rm = T)) %&gt;% # sumo las detecciones en cada sitio\n  reduce(cbind) %&gt;% # unimos las listas\n  t() %&gt;% # trasponer la tabla\n  as_tibble() %&gt;% #formato tibble\n  mutate_if(is.numeric,~(.&gt;=1)*1) %&gt;%  #como es incidencia, formateo a 1 y 0\n  rowSums() %&gt;%  # ahora si la suma de las incidencias en cada sitio\n  as_tibble() %&gt;% \n add_row(value= 67, .before = 1) %&gt;%  # el formato requiere que el primer valor sea el número de sitios\n  as.matrix() # Requiere formato de matriz\n\n\n\n# Calcular la riqueza con estimadores no paramétricos\nchao_sp &lt;- ChaoSpecies(inci_Chao, datatype = \"incidence_freq\")\n\nNIChao &lt;- chao_sp$Species_table[4,c(1,3,4)] # Extraer valores de IChao\n\nNocu&lt;- mcmc_intervals(fit.commu, pars = \"Ntotal\", prob = 0.95,prob_outer = 0.99, point_est = \"mean\")[[1]] %&gt;%  # Extraer valores del bayes plot\n  select(m,l,h) %&gt;% # Seleccionar columnas\n  rename(\"Estimate\"= m, # Renombrarlas\n         \"95%Lower\"= l,\n         \"95%Upper\"= h)\n\n\n# Unir en un solo dataframe\nNplotdata &lt;- rbind(IChao=NIChao, DR.mod=Nocu) %&gt;% \n  as.data.frame() %&gt;% \n  rownames_to_column(.)\n\n# Gráfico para comparar la riqueza estimada\nplotN &lt;- ggplot(Nplotdata, aes(x=rowname, y= Estimate, col=rowname))+\n  geom_point(aes(shape=rowname),size=3)+\n  geom_errorbar(aes(ymin= `95%Lower`, ymax= `95%Upper`), width=.3, size=1)+\n  labs(x=\"Estimador de riqueza\",y=\"Número de especies estimado\", title = \"Diferencia de los estimadores de riqueza\")+\n  theme_classic()+\n  theme(text=element_text(size = 13), plot.title = element_text(hjust= 0.5), legend.position = \"none\")\n\nplotN\n\n\n\n\n\n\n\nSpatial prediction\nOccupancy\n\nBe aware if you used a large number in interations for better fit in the Running model part, you can get the Error: cannot locate a vector size 467.8 Gb\n\n\nCode# species occupancy estimates\npredictions_psi &lt;- predict(object    = comu_model, \n                             mcmc.list = fit.commu,\n                             x         = cos_rast,\n                             type      = \"psi\",\n                             draws     = 1000)\n\n# save the results to not run again\nwriteRaster(predictions_psi[[1]], file=\"C:/CodigoR/CameraTrapCesar/posts/2024-06-20-multispecies-occupancy/result/predictions_psi.tif\", overwrite=TRUE) # guardamos los resultados para no correr de nuevo\n\n\n\n# Plot occupancy\nplot(predictions_psi$mean, zlim = c(0,1), \n       col = hcl.colors(100), \n       maxnl = 9,   # plotting only the first 9 species for space reasons\n       asp = 1)  \n  \n\n\n\n\n\n\n\n\n\n\nSpecies Richness\nNotice this prediction can be also very RAM consuming…\n\nCode# species richness estimates\npredictions_rich &lt;- predict(object   = comu_model, \n                             mcmc.list = fit.commu,\n                             x         = cos_rast,\n                             type      = \"richness\",\n                            draws     = 1000)\n\n# save the results to not run again\nwriteRaster(predictions_rich, file=\"C:/CodigoR/CameraTrapCesar/posts/2024-06-20-multispecies-occupancy/result/predictions_rich.tif\") # guardamos los resultados para no correr de nuevo\n\n\n# plot richness\nplot(predictions_rich, col = hcl.colors(100), asp = 1)\n  \n\n\n\n\n\n\n\n\n\n\nAn additional option to avoid the out of memory issue can be to aggregate the pixel size before making the prediction.\n\nCodenew_raster &lt;- aggregate(old_raster, fact = 10)"
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#package-citation",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#package-citation",
    "title": "Multispecies occupancy model",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", out.dir = \".\") #knitr::kable(pkgs)\n#&gt; WARNING: One or more problems were discovered while enumerating dependencies.\n#&gt; \n#&gt; # C:/CodigoR/CameraTrapCesar/posts/2024-06-20-multispecies-occupancy/result/DR_result.R --------\n#&gt; Error: invalid multibyte character in parser (&lt;input&gt;:4:4)\n#&gt; \n#&gt; # C:/CodigoR/CameraTrapCesar/posts/2024-06-20-multispecies-occupancy/result/predictions_psi.R --------\n#&gt; Error: invalid multibyte character in parser (&lt;input&gt;:11:2)\n#&gt; \n#&gt; Please see `?renv::dependencies` for more information.\npkgs\n\nWe used R version 4.3.2 (R Core Team 2023) and the following R packages: bayesplot v. 1.11.1 (Gabry et al. 2019; Gabry and Mahr 2024), beepr v. 1.3 (Bååth 2018), camtrapR v. 2.3.0 (Niedballa et al. 2016), devtools v. 2.4.5 (Wickham et al. 2022), DT v. 0.32 (Xie, Cheng, and Tan 2024), elevatr v. 0.99.0 (Hollister et al. 2023), kableExtra v. 1.4.0 (Zhu 2024), mapview v. 2.11.2 (Appelhans et al. 2023), nimble v. 1.1.0 (de Valpine et al. 2017, 2024b, 2024a), patchwork v. 1.2.0 (Pedersen 2024), quarto v. 1.4 (Allaire and Dervieux 2024), rjags v. 4.15 (Plummer 2023), rmarkdown v. 2.27 (Xie, Allaire, and Grolemund 2018; Xie, Dervieux, and Riederer 2020; Allaire et al. 2024), sf v. 1.0.15 (Pebesma 2018; Pebesma and Bivand 2023), snowfall v. 1.84.6.3 (Knaus 2023), SpadeR v. 0.1.1 (Chao et al. 2016), styler v. 1.10.3 (Müller and Walthert 2024), terra v. 1.7.71 (Hijmans 2024), tictoc v. 1.2.1 (Izrailev 2024), tidyverse v. 2.0.0 (Wickham et al. 2019)."
  },
  {
    "objectID": "posts/2024-06-20-multispecies-occupancy/index.html#sesion-info",
    "href": "posts/2024-06-20-multispecies-occupancy/index.html#sesion-info",
    "title": "Multispecies occupancy model",
    "section": "Sesion info",
    "text": "Sesion info\n\nSession info\n\n#&gt; ─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  setting  value\n#&gt;  version  R version 4.3.2 (2023-10-31 ucrt)\n#&gt;  os       Windows 10 x64 (build 19042)\n#&gt;  system   x86_64, mingw32\n#&gt;  ui       RTerm\n#&gt;  language (EN)\n#&gt;  collate  Spanish_Colombia.utf8\n#&gt;  ctype    Spanish_Colombia.utf8\n#&gt;  tz       America/Bogota\n#&gt;  date     2024-06-27\n#&gt;  pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n#&gt; \n#&gt; ─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────\n#&gt;  ! package           * version    date (UTC) lib source\n#&gt;    abind               1.4-5      2016-07-21 [1] CRAN (R 4.3.1)\n#&gt;    audio               0.1-11     2023-08-18 [1] CRAN (R 4.3.1)\n#&gt;    backports           1.4.1      2021-12-13 [1] CRAN (R 4.3.1)\n#&gt;    base64enc           0.1-3      2015-07-28 [1] CRAN (R 4.3.1)\n#&gt;    bayesplot         * 1.11.1     2024-02-15 [1] CRAN (R 4.3.3)\n#&gt;    beepr             * 1.3        2018-06-04 [1] CRAN (R 4.3.3)\n#&gt;    brew                1.0-10     2023-12-16 [1] CRAN (R 4.3.2)\n#&gt;    bslib               0.6.1      2023-11-28 [1] CRAN (R 4.3.2)\n#&gt;    cachem              1.0.8      2023-05-01 [1] CRAN (R 4.3.2)\n#&gt;    camtrapR          * 2.3.0      2024-02-26 [1] CRAN (R 4.3.3)\n#&gt;    cellranger          1.1.0      2016-07-27 [1] CRAN (R 4.3.2)\n#&gt;    checkmate           2.3.1      2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;    class               7.3-22     2023-05-03 [2] CRAN (R 4.3.2)\n#&gt;    classInt            0.4-10     2023-09-05 [1] CRAN (R 4.3.2)\n#&gt;    cli                 3.6.2      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;    coda              * 0.19-4.1   2024-01-31 [1] CRAN (R 4.3.2)\n#&gt;    codetools           0.2-19     2023-02-01 [2] CRAN (R 4.3.2)\n#&gt;    colorspace          2.1-0      2023-01-23 [1] CRAN (R 4.3.2)\n#&gt;    crayon              1.5.2      2022-09-29 [1] CRAN (R 4.3.2)\n#&gt;    crosstalk           1.2.1      2023-11-23 [1] CRAN (R 4.3.2)\n#&gt;    curl                5.2.0      2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    data.table          1.15.0     2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;    DBI                 1.2.2      2024-02-16 [1] CRAN (R 4.3.2)\n#&gt;    devtools            2.4.5      2022-10-11 [1] CRAN (R 4.3.2)\n#&gt;    digest              0.6.34     2024-01-11 [1] CRAN (R 4.3.2)\n#&gt;    distributional      0.4.0      2024-02-07 [1] CRAN (R 4.3.2)\n#&gt;    dplyr             * 1.1.4      2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;    DT                  0.32       2024-02-19 [1] CRAN (R 4.3.3)\n#&gt;    e1071               1.7-14     2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    elevatr           * 0.99.0     2023-09-12 [1] CRAN (R 4.3.2)\n#&gt;    ellipsis            0.3.2      2021-04-29 [1] CRAN (R 4.3.2)\n#&gt;    evaluate            0.23       2023-11-01 [1] CRAN (R 4.3.2)\n#&gt;    fansi               1.0.6      2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    farver              2.1.1      2022-07-06 [1] CRAN (R 4.3.2)\n#&gt;    fastmap             1.1.1      2023-02-24 [1] CRAN (R 4.3.2)\n#&gt;    forcats           * 1.0.0      2023-01-29 [1] CRAN (R 4.3.2)\n#&gt;    fs                  1.6.3      2023-07-20 [1] CRAN (R 4.3.2)\n#&gt;    generics            0.1.3      2022-07-05 [1] CRAN (R 4.3.2)\n#&gt;    ggplot2           * 3.5.1      2024-04-23 [1] CRAN (R 4.3.3)\n#&gt;    ggridges            0.5.6      2024-01-23 [1] CRAN (R 4.3.3)\n#&gt;    glue                1.7.0      2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;    grateful          * 0.2.4      2023-10-22 [1] CRAN (R 4.3.3)\n#&gt;    gtable              0.3.4      2023-08-21 [1] CRAN (R 4.3.2)\n#&gt;    hms                 1.1.3      2023-03-21 [1] CRAN (R 4.3.2)\n#&gt;    htmltools           0.5.7      2023-11-03 [1] CRAN (R 4.3.2)\n#&gt;    htmlwidgets         1.6.4      2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    httpuv              1.6.14     2024-01-26 [1] CRAN (R 4.3.2)\n#&gt;    httr                1.4.7      2023-08-15 [1] CRAN (R 4.3.2)\n#&gt;    igraph              2.0.2      2024-02-17 [1] CRAN (R 4.3.2)\n#&gt;    jquerylib           0.1.4      2021-04-26 [1] CRAN (R 4.3.2)\n#&gt;    jsonlite            1.8.8      2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;    kableExtra        * 1.4.0      2024-01-24 [1] CRAN (R 4.3.3)\n#&gt;    KernSmooth          2.23-22    2023-07-10 [2] CRAN (R 4.3.2)\n#&gt;    knitr               1.46       2024-04-06 [1] CRAN (R 4.3.3)\n#&gt;    labeling            0.4.3      2023-08-29 [1] CRAN (R 4.3.1)\n#&gt;    later               1.3.2      2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    lattice             0.22-5     2023-10-24 [1] CRAN (R 4.3.2)\n#&gt;    leafem              0.2.3      2023-09-17 [1] CRAN (R 4.3.2)\n#&gt;    leaflet             2.2.1      2023-11-13 [1] CRAN (R 4.3.2)\n#&gt;    leaflet.providers   2.0.0      2023-10-17 [1] CRAN (R 4.3.2)\n#&gt;    leafpop             0.1.0      2021-05-22 [1] CRAN (R 4.3.2)\n#&gt;    lifecycle           1.0.4      2023-11-07 [1] CRAN (R 4.3.2)\n#&gt;    lubridate         * 1.9.3      2023-09-27 [1] CRAN (R 4.3.2)\n#&gt;    lwgeom              0.2-13     2023-05-22 [1] CRAN (R 4.3.2)\n#&gt;    magrittr            2.0.3      2022-03-30 [1] CRAN (R 4.3.2)\n#&gt;    mapview           * 2.11.2     2023-10-13 [1] CRAN (R 4.3.2)\n#&gt;    MASS                7.3-60     2023-05-04 [2] CRAN (R 4.3.2)\n#&gt;    Matrix              1.6-1.1    2023-09-18 [2] CRAN (R 4.3.2)\n#&gt;    memoise             2.0.1      2021-11-26 [1] CRAN (R 4.3.2)\n#&gt;    mgcv                1.9-1      2023-12-21 [1] CRAN (R 4.3.3)\n#&gt;    mime                0.12       2021-09-28 [1] CRAN (R 4.3.1)\n#&gt;    miniUI              0.1.1.1    2018-05-18 [1] CRAN (R 4.3.2)\n#&gt;    munsell             0.5.0      2018-06-12 [1] CRAN (R 4.3.2)\n#&gt;    nimble            * 1.1.0      2024-01-31 [1] CRAN (R 4.3.3)\n#&gt;    nlme                3.1-163    2023-08-09 [2] CRAN (R 4.3.2)\n#&gt;    numDeriv            2016.8-1.1 2019-06-06 [1] CRAN (R 4.3.1)\n#&gt;    patchwork         * 1.2.0      2024-01-08 [1] CRAN (R 4.3.3)\n#&gt;    pillar              1.9.0      2023-03-22 [1] CRAN (R 4.3.2)\n#&gt;    pkgbuild            1.4.4      2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;    pkgconfig           2.0.3      2019-09-22 [1] CRAN (R 4.3.2)\n#&gt;    pkgload             1.3.4      2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;    plyr                1.8.9      2023-10-02 [1] CRAN (R 4.3.2)\n#&gt;    png                 0.1-8      2022-11-29 [1] CRAN (R 4.3.1)\n#&gt;    posterior           1.5.0      2023-10-31 [1] CRAN (R 4.3.2)\n#&gt;    pracma              2.4.4      2023-11-10 [1] CRAN (R 4.3.3)\n#&gt;    prettyunits         1.2.0      2023-09-24 [1] CRAN (R 4.3.2)\n#&gt;    processx            3.8.3      2023-12-10 [1] CRAN (R 4.3.2)\n#&gt;    profvis             0.3.8      2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;    progress            1.2.3      2023-12-06 [1] CRAN (R 4.3.3)\n#&gt;    progressr           0.14.0     2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    promises            1.2.1      2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    proxy               0.4-27     2022-06-09 [1] CRAN (R 4.3.2)\n#&gt;    ps                  1.7.6      2024-01-18 [1] CRAN (R 4.3.2)\n#&gt;    purrr             * 1.0.2      2023-08-10 [1] CRAN (R 4.3.2)\n#&gt;    quarto            * 1.4        2024-03-06 [1] CRAN (R 4.3.3)\n#&gt;    R.cache             0.16.0     2022-07-21 [1] CRAN (R 4.3.3)\n#&gt;    R.methodsS3         1.8.2      2022-06-13 [1] CRAN (R 4.3.3)\n#&gt;    R.oo                1.26.0     2024-01-24 [1] CRAN (R 4.3.3)\n#&gt;    R.utils             2.12.3     2023-11-18 [1] CRAN (R 4.3.3)\n#&gt;    R6                  2.5.1      2021-08-19 [1] CRAN (R 4.3.2)\n#&gt;    raster              3.6-26     2023-10-14 [1] CRAN (R 4.3.2)\n#&gt;    RColorBrewer        1.1-3      2022-04-03 [1] CRAN (R 4.3.1)\n#&gt;    Rcpp                1.0.12     2024-01-09 [1] CRAN (R 4.3.2)\n#&gt;    RcppNumerical       0.6-0      2023-09-06 [1] CRAN (R 4.3.3)\n#&gt;  D RcppParallel        5.1.7      2023-02-27 [1] CRAN (R 4.3.2)\n#&gt;    readr             * 2.1.5      2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;    readxl            * 1.4.3      2023-07-06 [1] CRAN (R 4.3.2)\n#&gt;    remotes             2.5.0      2024-03-17 [1] CRAN (R 4.3.3)\n#&gt;    renv                1.0.7      2024-04-11 [1] CRAN (R 4.3.3)\n#&gt;    reshape2            1.4.4      2020-04-09 [1] CRAN (R 4.3.3)\n#&gt;    rjags             * 4-15       2023-11-30 [1] CRAN (R 4.3.3)\n#&gt;    rlang               1.1.3      2024-01-10 [1] CRAN (R 4.3.2)\n#&gt;    rmarkdown           2.27       2024-05-17 [1] CRAN (R 4.3.3)\n#&gt;    rstudioapi          0.16.0     2024-03-24 [1] CRAN (R 4.3.3)\n#&gt;    s2                  1.1.6      2023-12-19 [1] CRAN (R 4.3.2)\n#&gt;    sass                0.4.8      2023-12-06 [1] CRAN (R 4.3.2)\n#&gt;    satellite           1.0.5      2024-02-10 [1] CRAN (R 4.3.2)\n#&gt;    scales              1.3.0      2023-11-28 [1] CRAN (R 4.3.3)\n#&gt;    secr                4.6.6      2024-02-29 [1] CRAN (R 4.3.3)\n#&gt;    sessioninfo         1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n#&gt;    sf                * 1.0-15     2023-12-18 [1] CRAN (R 4.3.2)\n#&gt;    shiny               1.8.0      2023-11-17 [1] CRAN (R 4.3.2)\n#&gt;    slippymath          0.3.1      2019-06-28 [1] CRAN (R 4.3.2)\n#&gt;    snow              * 0.4-4      2021-10-27 [1] CRAN (R 4.3.2)\n#&gt;    snowfall          * 1.84-6.3   2023-11-26 [1] CRAN (R 4.3.2)\n#&gt;    sp                  2.1-3      2024-01-30 [1] CRAN (R 4.3.2)\n#&gt;    SpadeR            * 0.1.1      2016-09-06 [1] CRAN (R 4.3.1)\n#&gt;    stars               0.6-4      2023-09-11 [1] CRAN (R 4.3.2)\n#&gt;    stringi             1.8.3      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt;    stringr           * 1.5.1      2023-11-14 [1] CRAN (R 4.3.2)\n#&gt;    styler            * 1.10.3     2024-04-07 [1] CRAN (R 4.3.3)\n#&gt;    svglite             2.1.3      2023-12-08 [1] CRAN (R 4.3.2)\n#&gt;    systemfonts         1.0.5      2023-10-09 [1] CRAN (R 4.3.2)\n#&gt;    tensorA             0.36.2.1   2023-12-13 [1] CRAN (R 4.3.2)\n#&gt;    terra             * 1.7-71     2024-01-31 [1] CRAN (R 4.3.2)\n#&gt;    tibble            * 3.2.1      2023-03-20 [1] CRAN (R 4.3.2)\n#&gt;    tictoc            * 1.2.1      2024-03-18 [1] CRAN (R 4.3.3)\n#&gt;    tidyr             * 1.3.1      2024-01-24 [1] CRAN (R 4.3.2)\n#&gt;    tidyselect          1.2.1      2024-03-11 [1] CRAN (R 4.3.3)\n#&gt;    tidyverse         * 2.0.0      2023-02-22 [1] CRAN (R 4.3.2)\n#&gt;    timechange          0.3.0      2024-01-18 [1] CRAN (R 4.3.2)\n#&gt;    tzdb                0.4.0      2023-05-12 [1] CRAN (R 4.3.2)\n#&gt;    units               0.8-5      2023-11-28 [1] CRAN (R 4.3.2)\n#&gt;    urlchecker          1.0.1      2021-11-30 [1] CRAN (R 4.3.2)\n#&gt;    usethis             2.2.3      2024-02-19 [1] CRAN (R 4.3.2)\n#&gt;    utf8                1.2.4      2023-10-22 [1] CRAN (R 4.3.2)\n#&gt;    uuid                1.2-0      2024-01-14 [1] CRAN (R 4.3.2)\n#&gt;    vctrs               0.6.5      2023-12-01 [1] CRAN (R 4.3.2)\n#&gt;    viridisLite         0.4.2      2023-05-02 [1] CRAN (R 4.3.2)\n#&gt;    withr               3.0.0      2024-01-16 [1] CRAN (R 4.3.2)\n#&gt;    wk                  0.9.1      2023-11-29 [1] CRAN (R 4.3.2)\n#&gt;    xfun                0.44       2024-05-15 [1] CRAN (R 4.3.3)\n#&gt;    xml2                1.3.6      2023-12-04 [1] CRAN (R 4.3.2)\n#&gt;    xtable              1.8-4      2019-04-21 [1] CRAN (R 4.3.2)\n#&gt;    yaml                2.3.8      2023-12-11 [1] CRAN (R 4.3.2)\n#&gt; \n#&gt;  [1] C:/Users/usuario/AppData/Local/R/win-library/4.3\n#&gt;  [2] C:/Program Files/R/R-4.3.2/library\n#&gt; \n#&gt;  D ── DLL MD5 mismatch, broken installation.\n#&gt; \n#&gt; ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  }
]